@page
@model CrowdQR.Web.Pages.Admin.EventsModel
@{
    ViewData["Title"] = "Manage Events";
    Layout = "_AdminLayout";
}

<div class="container-fluid mt-4">
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i> @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i> @Model.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3">Manage Events</h1>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createEventModal">
            <i class="bi bi-plus-circle me-1"></i> Create New Event
        </button>
    </div>

    <!-- Events Table -->
    <div class="card">
        <div class="card-header bg-white">
            <h2 class="h5 mb-0">Your Events</h2>
        </div>
        <div class="card-body p-0">
            @if (Model.Events.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Slug</th>
                                <th>Status</th>
                                <th class="text-center">QR Code</th>
                                <th class="text-center">Dashboard</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var eventItem in Model.Events)
                            {
                                <tr>
                                    <td>@eventItem.Name</td>
                                    <td>
                                        <span class="badge bg-light text-dark">@eventItem.Slug</span>
                                    </td>
                                    <td>
                                        @if (eventItem.IsActive)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Inactive</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <a href="/qr/@eventItem.Slug" class="btn btn-sm btn-outline-primary" target="_blank">
                                            <i class="bi bi-qr-code"></i>
                                        </a>
                                    </td>
                                    <td class="text-center">
                                        <a href="/Admin/Dashboard?eventId=@eventItem.EventId" class="btn btn-sm btn-primary">
                                            <i class="bi bi-speedometer2"></i>
                                        </a>
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group">
                                            <button type="button" class="btn btn-sm btn-outline-secondary"
                                                    onclick="prepareEditEvent(@eventItem.EventId, '@eventItem.Name', '@eventItem.Slug', @eventItem.IsActive.ToString().ToLower())">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-danger"
                                                    onclick="confirmDelete(@eventItem.EventId, '@eventItem.Name')">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-calendar-x text-muted" style="font-size: 3rem;"></i>
                    <p class="mt-3 mb-0">You don't have any events yet.</p>
                    <p class="text-muted">Click the "Create New Event" button to get started.</p>
                </div>
            }
        </div>
    </div>

    <!-- Create Event Modal -->
    <div class="modal fade" id="createEventModal" tabindex="-1" aria-labelledby="createEventModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form method="post" >
                    <div class="modal-header">
                        <h5 class="modal-title" id="createEventModalLabel">Create New Event</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label asp-for="NewEvent.Name" class="form-label">Event Name</label>
                            <input asp-for="NewEvent.Name" class="form-control" required />
                            <span asp-validation-for="NewEvent.Name" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="NewEvent.Slug" class="form-label">Event Slug</label>
                            <div class="input-group">
                                <span class="input-group-text">crowdqr.com/event/</span>
                                <input asp-for="NewEvent.Slug" class="form-control" required pattern="^[a-z0-9-]+$" />
                            </div>
                            <div class="form-text">
                                Use lowercase letters, numbers, and hyphens only. This will be used in the URL.
                            </div>
                            <span asp-validation-for="NewEvent.Slug" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary" asp-page-handler="Create">Create Event</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Event Modal -->
    <div class="modal fade" id="editEventModal" tabindex="-1" aria-labelledby="editEventModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form method="post" >
                    <div class="modal-header">
                        <h5 class="modal-title" id="editEventModalLabel">Edit Event</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" asp-for="EditEvent.EventId" id="editEventId" />
                        <div class="mb-3">
                            <label asp-for="EditEvent.Name" class="form-label">Event Name</label>
                            <input asp-for="EditEvent.Name" class="form-control" id="editEventName" required />
                            <span asp-validation-for="EditEvent.Name" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="EditEvent.Slug" class="form-label">Event Slug</label>
                            <div class="input-group">
                                <span class="input-group-text">crowdqr.com/event/</span>
                                <input asp-for="EditEvent.Slug" class="form-control" id="editEventSlug" required pattern="^[a-z0-9-]+$" />
                            </div>
                            <div class="form-text">
                                Use lowercase letters, numbers, and hyphens only. This will be used in the URL.
                            </div>
                            <span asp-validation-for="EditEvent.Slug" class="text-danger"></span>
                        </div>
                        <div class="mb-3 form-check">
                            <input asp-for="EditEvent.IsActive" class="form-check-input" id="editEventActive" />
                            <label asp-for="EditEvent.IsActive" class="form-check-label">Active</label>
                            <div class="form-text">
                                Inactive events are not accessible to audience members.
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary" asp-page-handler="Update">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Event Confirmation Modal -->
    <div class="modal fade" id="deleteEventModal" tabindex="-1" aria-labelledby="deleteEventModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form method="post" >
                    <input type="hidden" id="deleteEventId" name="eventId" />
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteEventModalLabel">Confirm Deletion</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete the event "<span id="deleteEventName"></span>"?</p>
                        <p class="text-danger">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            This action cannot be undone. All requests and votes for this event will also be deleted.
                        </p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger" asp-page-handler="Delete">Delete Event</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function prepareEditEvent(id, name, slug, isActive) {
            document.getElementById('editEventId').value = id;
            document.getElementById('editEventName').value = name;
            document.getElementById('editEventSlug').value = slug;
            document.getElementById('editEventActive').checked = isActive;

            // Show the modal
            const modal = new bootstrap.Modal(document.getElementById('editEventModal'));
            modal.show();
        }

        function confirmDelete(id, name) {
            document.getElementById('deleteEventId').value = id;
            document.getElementById('deleteEventName').innerText = name;

            // Show the modal
            const modal = new bootstrap.Modal(document.getElementById('deleteEventModal'));
            modal.show();
        }

        // Auto-generate slug from event name
        document.addEventListener('DOMContentLoaded', function () {
            const nameInput = document.querySelector('#NewEvent_Name');
            const slugInput = document.querySelector('#NewEvent_Slug');

            if (nameInput && slugInput) {
                nameInput.addEventListener('input', function () {
                    // Only auto-generate if slug is empty or hasn't been manually edited
                    if (slugInput.dataset.manuallyEdited !== 'true') {
                        const slug = this.value
                            .toLowerCase()
                            .replace(/[^\w\s-]/g, '') // Remove special characters
                            .replace(/\s+/g, '-')     // Replace spaces with hyphens
                            .replace(/-+/g, '-');     // Remove consecutive hyphens

                        slugInput.value = slug;
                    }
                });

                // Mark slug as manually edited when user types in it
                slugInput.addEventListener('input', function () {
                    slugInput.dataset.manuallyEdited = 'true';
                });
            }
        });
    </script>
}