@page
@model CrowdQR.Web.Pages.Admin.SettingsModel
@{
    ViewData["Title"] = "Settings";
    Layout = "_AdminLayout";
}

<h2 class="mb-4">Settings</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (!ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul class="mb-0">
            @foreach (var modelError in ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@modelError.ErrorMessage</li>
            }
        </ul>
    </div>
}

<!-- Theme Switcher -->
<div class="card mb-4">
    <div class="card-header">Theme</div>
    <div class="card-body">
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" id="themeSwitch" @(Model.IsDarkTheme ? "checked" : "") />
            <label class="form-check-label" for="themeSwitch">Dark Mode</label>
        </div>
    </div>
</div>

<!-- Profile Information -->
<div class="card mb-4">
    <div class="card-header">Profile Information</div>
    <div class="card-body">
        <form method="post">
            <input type="hidden" name="action" value="profile" />
            <div class="mb-3">
                <label for="displayName" class="form-label">Display Name</label>
                <input type="text" class="form-control" id="displayName" name="DisplayName" value="@Model.DisplayName" placeholder="Enter your display name" />
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <input type="email" class="form-control" id="email" name="Email" value="@Model.Email" placeholder="Enter your email" />
            </div>
            <button type="submit" class="btn btn-primary">Save Profile</button>
        </form>
    </div>
</div>

<!-- Default Event Settings -->
<div class="card mb-4">
    <div class="card-header">Default Event Settings</div>
    <div class="card-body">
        <form method="post">
            <div class="mb-3">
                <label for="maxRequests" class="form-label">Max Requests Per User</label>
                <input type="number" class="form-control" id="maxRequests" name="MaxRequestsPerUser" min="1" max="20" />
            </div>
            <div class="mb-3">
                <label for="eventDuration" class="form-label">Default Event Duration (minutes)</label>
                <input type="number" class="form-control" id="eventDuration" name="DefaultEventDuration" min="10" max="480" />
            </div>
            <button type="submit" class="btn btn-primary">Save Event Defaults</button>
        </form>
    </div>
</div>

<!-- Password Change -->
<div class="card mb-4">
    <div class="card-header">Change Password</div>
    <div class="card-body">
        <form method="post">
            <input type="hidden" name="action" value="change-password" />
            <div class="mb-3">
                <label for="currentPassword" class="form-label">Current Password</label>
                <input type="password" class="form-control" id="currentPassword" name="CurrentPassword" required />
            </div>
            <div class="mb-3">
                <label for="newPassword" class="form-label">New Password</label>
                <input type="password" class="form-control" id="newPassword" name="NewPassword" required />
            </div>
            <div class="mb-3">
                <label for="confirmPassword" class="form-label">Confirm New Password</label>
                <input type="password" class="form-control" id="confirmPassword" name="ConfirmPassword" required />
            </div>
            <button type="submit" class="btn btn-primary">Change Password</button>
        </form>
    </div>
</div>

<!-- Account Management -->
<div class="card mb-4">
    <div class="card-header">Account Management</div>
    <div class="card-body">
        <form method="post" class="d-inline">
            <button type="submit" name="action" value="logout" class="btn btn-secondary me-2">Logout</button>
        </form>
        <form method="post" class="d-inline">
            <button type="submit" name="action" value="delete" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete your account? This action cannot be undone.');">Delete Account</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Theme switching functionality
        document.getElementById('themeSwitch').addEventListener('change', function() {
            const isDark = this.checked;
            // Update the theme
            document.documentElement.setAttribute('data-bs-theme', isDark ? 'dark' : 'light');
            
            // Save the theme preference via fetch
            fetch('/api/theme', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ isDarkTheme: isDark })
            }).then(response => {
                if (!response.ok) {
                    console.error('Failed to save theme preference');
                }
            });
        });

        // Set initial theme
        document.documentElement.setAttribute('data-bs-theme', '@(Model.IsDarkTheme ? "dark" : "light")');
    </script>
} 