@page "{eventId?}"
@model CrowdQR.Web.Pages.Admin.DashboardModel
@{
    ViewData["Title"] = "DJ Dashboard";
    Layout = "_Layout";
}

<div class="container-fluid mt-4">
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i> @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i> @Model.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Event Header -->
    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="display-6">
                DJ Dashboard: @Model.EventName
                <span class="badge bg-primary ms-2">@Model.EventSlug</span>
            </h1>
        </div>
        <div class="col-md-4 text-end">
            <div class="btn-group" role="group">
                <a href="/qr/@Model.EventSlug" class="btn btn-outline-primary" target="_blank">
                    <i class="bi bi-qr-code"></i> QR Code
                </a>
                <a href="/event/@Model.EventSlug" class="btn btn-outline-secondary" target="_blank">
                    <i class="bi bi-eye"></i> View Event
                </a>
            </div>
        </div>
    </div>

    <!-- Stats and Search Row -->
    <div class="row mb-4">
        <div class="col-md-8">
            <div class="row row-cols-1 row-cols-md-3 g-4">
                <div class="col">
                    <div class="card text-white bg-primary">
                        <div class="card-body">
                            <h5 class="card-title"><i class="bi bi-music-note"></i> Pending Requests</h5>
                            <p class="card-text display-6">@Model.PendingRequests.Count</p>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="card text-white bg-success">
                        <div class="card-body">
                            <h5 class="card-title"><i class="bi bi-check2-circle"></i> Approved</h5>
                            <p class="card-text display-6">@Model.ApprovedRequests.Count</p>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="card text-white bg-info">
                        <div class="card-body">
                            <h5 class="card-title"><i class="bi bi-people"></i> Active Users</h5>
                            <p class="card-text display-6">@Model.ActiveUsers</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Search Requests</h5>
                    <form method="get" class="d-flex">
                        <input type="hidden" name="eventId" value="@Model.EventId" />
                        <input type="hidden" name="tab" value="@Model.Tab" />
                        <input type="text" name="searchTerm" class="form-control me-2" placeholder="Song, artist, or requester..." value="@Model.SearchTerm">
                        <button class="btn btn-primary" type="submit">
                            <i class="bi bi-search"></i>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Tab Navigation -->
    <ul class="nav nav-tabs mb-4">
        <li class="nav-item">
            <a class="nav-link @(Model.Tab == "pending" ? "active" : "")"
               href="?eventId=@Model.EventId&tab=pending&searchTerm=@Model.SearchTerm">
                Pending
                <span class="badge bg-primary ms-1">@Model.PendingRequests.Count</span>
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(Model.Tab == "approved" ? "active" : "")"
               href="?eventId=@Model.EventId&tab=approved&searchTerm=@Model.SearchTerm">
                Approved
                <span class="badge bg-success ms-1">@Model.ApprovedRequests.Count</span>
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(Model.Tab == "rejected" ? "active" : "")"
               href="?eventId=@Model.EventId&tab=rejected&searchTerm=@Model.SearchTerm">
                Rejected
                <span class="badge bg-secondary ms-1">@Model.RejectedRequests.Count</span>
            </a>
        </li>
    </ul>

    <!-- Request Tables -->
    @if (Model.Tab == "pending")
    {
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h3 class="h5 mb-0">Pending Requests</h3>
            </div>
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Song</th>
                            <th>Artist</th>
                            <th>Requester</th>
                            <th>Votes</th>
                            <th>Time</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.PendingRequests.Any())
                        {
                            @foreach (var request in Model.PendingRequests.OrderByDescending(r => r.VoteCount))
                            {
                                <tr>
                                    <td class="fw-bold">@request.SongName</td>
                                    <td>@request.ArtistName</td>
                                    <td>@request.Requester</td>
                                    <td>
                                        <span class="badge bg-primary">
                                            <i class="bi bi-hand-thumbs-up"></i> @request.VoteCount
                                        </span>
                                    </td>
                                    <td>@request.RequestTime.ToString("HH:mm")</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <form method="post" asp-page-handler="Approve" class="d-inline">
                                                <input type="hidden" name="requestId" value="@request.Id" />
                                                <input type="hidden" name="eventId" value="@Model.EventId" />
                                                <button type="submit" class="btn btn-sm btn-success">
                                                    <i class="bi bi-check"></i> Approve
                                                </button>
                                            </form>
                                            <form method="post" asp-page-handler="Reject" class="d-inline ms-1">
                                                <input type="hidden" name="requestId" value="@request.Id" />
                                                <input type="hidden" name="eventId" value="@Model.EventId" />
                                                <button type="submit" class="btn btn-sm btn-secondary">
                                                    <i class="bi bi-x"></i> Reject
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center py-4">No pending requests</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else if (Model.Tab == "approved")
    {
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h3 class="h5 mb-0">Approved Requests</h3>
            </div>
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Song</th>
                            <th>Artist</th>
                            <th>Requester</th>
                            <th>Votes</th>
                            <th>Requested</th>
                            <th>Approved</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ApprovedRequests.Any())
                        {
                            @foreach (var request in Model.ApprovedRequests.OrderByDescending(r => r.ActionTime))
                            {
                                <tr class="table-success table-opacity-25">
                                    <td class="fw-bold">@request.SongName</td>
                                    <td>@request.ArtistName</td>
                                    <td>@request.Requester</td>
                                    <td>
                                        <span class="badge bg-secondary">
                                            <i class="bi bi-hand-thumbs-up"></i> @request.VoteCount
                                        </span>
                                    </td>
                                    <td>@request.RequestTime.ToString("HH:mm")</td>
                                    <td>@(request.ActionTime?.ToString("HH:mm") ?? "-")</td>
                                    <td>
                                        <form method="post" asp-page-handler="MoveToPending">
                                            <input type="hidden" name="requestId" value="@request.Id" />
                                            <input type="hidden" name="eventId" value="@Model.EventId" />
                                            <button type="submit" class="btn btn-sm btn-outline-secondary">
                                                <i class="bi bi-arrow-counterclockwise"></i> Move to Pending
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center py-4">No approved requests</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else if (Model.Tab == "rejected")
    {
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h3 class="h5 mb-0">Rejected Requests</h3>
            </div>
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Song</th>
                            <th>Artist</th>
                            <th>Requester</th>
                            <th>Votes</th>
                            <th>Requested</th>
                            <th>Rejected</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.RejectedRequests.Any())
                        {
                            @foreach (var request in Model.RejectedRequests.OrderByDescending(r => r.ActionTime))
                            {
                                <tr class="table-secondary">
                                    <td class="fw-bold">@request.SongName</td>
                                    <td>@request.ArtistName</td>
                                    <td>@request.Requester</td>
                                    <td>
                                        <span class="badge bg-secondary">
                                            <i class="bi bi-hand-thumbs-up"></i> @request.VoteCount
                                        </span>
                                    </td>
                                    <td>@request.RequestTime.ToString("HH:mm")</td>
                                    <td>@(request.ActionTime?.ToString("HH:mm") ?? "-")</td>
                                    <td>
                                        <form method="post" asp-page-handler="MoveToPending">
                                            <input type="hidden" name="requestId" value="@request.Id" />
                                            <input type="hidden" name="eventId" value="@Model.EventId" />
                                            <button type="submit" class="btn btn-sm btn-outline-secondary">
                                                <i class="bi bi-arrow-counterclockwise"></i> Move to Pending
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center py-4">No rejected requests</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <!-- Real-time Update Indicator -->
    <div class="mt-4 text-end">
        <span class="badge bg-success">
            <i class="bi bi-broadcast"></i> Live Updates Active
        </span>
        <small class="text-muted ms-2">Last updated: @DateTime.Now.ToString("HH:mm:ss")</small>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-refresh the page every 30 seconds to simulate real-time updates
        // In a real implementation, you would use SignalR for real-time updates
        setTimeout(() => {
            window.location.reload();
        }, 30000);
    </script>
}