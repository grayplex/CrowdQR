# =============================================================================
# CrowdQR Environment Configuration
# =============================================================================

# PostgreSQL Database Configuration
# ---------------------------------
# Database credentials and connection settings
POSTGRES_USER=crowdqr_prod
POSTGRES_PASSWORD=your_secure_password_here_change_this
POSTGRES_DB=crowdqr_production

# Application Environment
# -----------------------
# Set to 'Production' for production deployments
# Set to 'Development' for local development
ASPNETCORE_ENVIRONMENT=Production

# Database Connection (Internal Docker Network)
# --------------------------------------------
# These should match the PostgreSQL settings above
# Host should be 'db' when using docker-compose, or actual hostname/IP for external DB
DB_HOST=db
DB_PORT=5432
DB_NAME=${POSTGRES_DB}
DB_USER=${POSTGRES_USER}
DB_PASSWORD=${POSTGRES_PASSWORD}

# JWT Authentication Settings
# ---------------------------
# SECURITY: Change these in production!
JWT_SECRET=your_jwt_secret_key_minimum_32_characters_long_change_this_in_production
JWT_ISSUER=CrowdQR.Api
JWT_AUDIENCE=CrowdQR.Web
JWT_EXPIRY_HOURS=24

# Email Configuration (Optional)
# ------------------------------
# Required for DJ email verification and notifications
# Leave empty to disable email features
# This feature is not yet implemented in the CrowdQR project.
SMTP_HOST=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=noreply@yourdomain.com
SMTP_FROM_NAME=CrowdQR

# Docker Registry Settings
# ------------------------
# Used for building and tagging images
REGISTRY=ghcr.io
REPOSITORY=grayplex/crowdqr
CROWDQR_VERSION=latest
CLOUDFLARE_DNS_API_TOKEN=your_cloudflare_dns_api_token_here_change_this
CLOUDFLARE_EMAIL=youremail@domain.com

# Application URLs (Production)
# -----------------------------
# External URLs for the application
API_PUBLIC_URL=https://your-api-domain.com
WEB_PUBLIC_URL=https://your-web-domain.com

# Security Settings
# -----------------
# CORS origins (comma-separated list of allowed origins)
CORS_ORIGINS=https://your-web-domain.com,https://localhost:5000

# Rate Limiting (Optional)
# ------------------------
# Requests per minute per IP
# Not yet implemented in the CrowdQR project.
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# Logging Configuration
# ---------------------
# Set logging levels: Trace, Debug, Information, Warning, Error, Critical
LOG_LEVEL=Information

# Health Check Configuration
# --------------------------
# Timeout for health checks in seconds
HEALTH_CHECK_TIMEOUT=30

# =============================================================================
# Docker Compose Override Settings
# =============================================================================

# Port Mappings (change if ports are in use)
# ------------------------------------------
DOCKER_API_PORT=5000
DOCKER_WEB_PORT=8080
DOCKER_DB_PORT=5433

# Volume Mappings
# ---------------
# Uncomment to persist data outside containers
# DB_DATA_PATH=./data/postgres

# =============================================================================
# Development Settings
# =============================================================================

# Development Database (when ASPNETCORE_ENVIRONMENT=Development)
# --------------------------------------------------------------
DEV_DB_HOST=localhost
DEV_DB_PORT=5432
DEV_DB_NAME=crowdqr_dev
DEV_DB_USER=postgres
DEV_DB_PASSWORD=postgres

# Development URLs
# ----------------
DEV_API_URL=http://localhost:5071
DEV_WEB_URL=http://localhost:5139

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 
# IMPORTANT: Before deploying to production:
# 1. Change POSTGRES_PASSWORD to a strong, unique password
# 2. Change JWT_SECRET to a cryptographically secure random string (32+ chars)
# 3. Set proper CORS_ORIGINS for your domain
# 4. Configure SMTP settings if email features are needed
# 5. Use HTTPS URLs for API_PUBLIC_URL and WEB_PUBLIC_URL
# 6. Consider using Docker secrets or environment-specific config for sensitive values
#
# =============================================================================